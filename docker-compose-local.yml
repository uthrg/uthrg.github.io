version: "3"        ##Docker-compose版本

services:           ##services/container
### Main database ###########################################
  postgres:
    container_name: 'todos-postgres'      ##Host name/address
    image: postgis/postgis:15-3.3-alpine    ##映像檔
    platform: linux/amd64
    volumes:
      - db1-data:/var/lib/postgresql/data     ##PostgreSQL寫入資料位置  Host目錄：Container目錄
    ports:
      - 5432:5432     ## Host port:Container Port
    environment:
      - POSTGRES_DB=todo    ##database
      - POSTGRES_USER=wei
      - POSTGRES_PASSWORD=12345
      - TZ=UTC
    networks: 
      - node-network

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
### postgres-client ################################################
  postgres-client:
    container_name: 'todos-pg-client'
    image: dpage/pgadmin4
    platform: linux/amd64
    environment:
      PGADMIN_DEFAULT_EMAIL: bear920430@gmail.com
      PGADMIN_DEFAULT_PASSWORD: 12345
    ports:
      - "16543:80"
    depends_on:
      - postgres
    networks: 
      - node-network
### Nginx ##########################################################
  nginx:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./build:/usr/share/nginx/html
    ports:
      - "8080:80"
    environment:
      - NGINX_HOST=foobar.com
      - NGINX_PORT=80
    networks: 
      - node-network

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    ports:
      - "5500:5500"
    environment:
      DB_HOST: todos-postgres
    restart: unless-stopped
    volumes:
      - ./Backend:/usr/app
    depends_on:
      - postgres
    networks: 
      - node-network
      
volumes:
  db1-data:
  
networks: 
  node-network:
    driver: bridge